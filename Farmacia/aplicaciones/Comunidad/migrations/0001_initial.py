# Generated by Django 4.2.5 on 2024-09-02 22:45

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='contacto',
            fields=[
                ('id_Contacto', models.AutoField(primary_key=True, serialize=False)),
                ('numero_Telefono', models.IntegerField(null=True, verbose_name='Numero')),
                ('numero_Opcional', models.IntegerField(null=True, verbose_name='Numero opcional')),
                ('calle', models.CharField(max_length=50, verbose_name='Calle')),
                ('número', models.IntegerField(verbose_name='Numero')),
                ('piso', models.IntegerField(null=True, verbose_name='N° Piso')),
                ('departamento', models.CharField(max_length=50, null=True, verbose_name='Departamento')),
                ('localidad', models.CharField(choices=[('Auxiliar', 'Auxiliar'), ('Administrativo', 'Administrativo'), ('Farmaceutico', 'Farmaceutico'), ('Medico', 'Medico')], max_length=20, verbose_name='Localidad')),
                ('provincia', models.CharField(max_length=50, verbose_name='Provincia')),
                ('código_Postal', models.IntegerField(null=True, verbose_name='Codigo Postal')),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Dni')),
                ('trabajo', models.CharField(choices=[('Auxiliar', 'Auxiliar'), ('Administrativo', 'Administrativo'), ('Farmaceutico', 'Farmaceutico'), ('Medico', 'Medico')], max_length=20, verbose_name='Puesto')),
                ('nacimiento', models.DateField(default=datetime.date.today, verbose_name='Nacimiento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('id_Contacto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Comunidad.contacto')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id_Proveedor', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=17, verbose_name='Nombre')),
                ('r_Social', models.CharField(max_length=50, verbose_name='Razon Social')),
                ('correo', models.CharField(max_length=50, verbose_name='Correo Electronico')),
                ('id_Contacto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Comunidad.contacto')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id_Paciente', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=17, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=50, verbose_name='Apellido')),
                ('dni', models.IntegerField(verbose_name='Dni')),
                ('id_Contacto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Comunidad.contacto')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='Laboratorio',
            fields=[
                ('id_Laboratorio', models.AutoField(primary_key=True, serialize=False, verbose_name='Laboratorio')),
                ('nombre', models.CharField(max_length=100)),
                ('id_Contacto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Comunidad.contacto')),
            ],
            options={
                'verbose_name': 'Laboratorio',
                'verbose_name_plural': 'Laboratorios',
            },
        ),
        migrations.AddField(
            model_name='contacto',
            name='email',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contactos', to=settings.AUTH_USER_MODEL, to_field='email'),
        ),
        migrations.AddConstraint(
            model_name='empleado',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_email'),
        ),
        migrations.AlterUniqueTogether(
            name='empleado',
            unique_together={('first_name', 'last_name', 'dni')},
        ),
        migrations.AlterUniqueTogether(
            name='proveedor',
            unique_together={('nombre', 'r_Social', 'correo')},
        ),
        migrations.AlterUniqueTogether(
            name='paciente',
            unique_together={('nombre', 'apellido', 'dni')},
        ),
    ]
